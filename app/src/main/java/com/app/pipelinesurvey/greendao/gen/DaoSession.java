package com.app.pipelinesurvey.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.app.pipelinesurvey.dbbean.Items;
import com.app.pipelinesurvey.dbbean.Line;
import com.app.pipelinesurvey.dbbean.People;
import com.app.pipelinesurvey.dbbean.Point;
import com.app.pipelinesurvey.dbbean.Setting;
import com.app.pipelinesurvey.dbbean.User;

import com.app.pipelinesurvey.greendao.gen.ItemsDao;
import com.app.pipelinesurvey.greendao.gen.LineDao;
import com.app.pipelinesurvey.greendao.gen.PeopleDao;
import com.app.pipelinesurvey.greendao.gen.PointDao;
import com.app.pipelinesurvey.greendao.gen.SettingDao;
import com.app.pipelinesurvey.greendao.gen.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig itemsDaoConfig;
    private final DaoConfig lineDaoConfig;
    private final DaoConfig peopleDaoConfig;
    private final DaoConfig pointDaoConfig;
    private final DaoConfig settingDaoConfig;
    private final DaoConfig userDaoConfig;

    private final ItemsDao itemsDao;
    private final LineDao lineDao;
    private final PeopleDao peopleDao;
    private final PointDao pointDao;
    private final SettingDao settingDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        itemsDaoConfig = daoConfigMap.get(ItemsDao.class).clone();
        itemsDaoConfig.initIdentityScope(type);

        lineDaoConfig = daoConfigMap.get(LineDao.class).clone();
        lineDaoConfig.initIdentityScope(type);

        peopleDaoConfig = daoConfigMap.get(PeopleDao.class).clone();
        peopleDaoConfig.initIdentityScope(type);

        pointDaoConfig = daoConfigMap.get(PointDao.class).clone();
        pointDaoConfig.initIdentityScope(type);

        settingDaoConfig = daoConfigMap.get(SettingDao.class).clone();
        settingDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        itemsDao = new ItemsDao(itemsDaoConfig, this);
        lineDao = new LineDao(lineDaoConfig, this);
        peopleDao = new PeopleDao(peopleDaoConfig, this);
        pointDao = new PointDao(pointDaoConfig, this);
        settingDao = new SettingDao(settingDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Items.class, itemsDao);
        registerDao(Line.class, lineDao);
        registerDao(People.class, peopleDao);
        registerDao(Point.class, pointDao);
        registerDao(Setting.class, settingDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        itemsDaoConfig.clearIdentityScope();
        lineDaoConfig.clearIdentityScope();
        peopleDaoConfig.clearIdentityScope();
        pointDaoConfig.clearIdentityScope();
        settingDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public ItemsDao getItemsDao() {
        return itemsDao;
    }

    public LineDao getLineDao() {
        return lineDao;
    }

    public PeopleDao getPeopleDao() {
        return peopleDao;
    }

    public PointDao getPointDao() {
        return pointDao;
    }

    public SettingDao getSettingDao() {
        return settingDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
